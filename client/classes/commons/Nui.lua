---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Absolute.
--- DateTime: 21/12/2023 01:18
---

_cn.Nui = "Nui";
loadClass(_cn.Nui)

--- Imports ---

import(_cn.List)
import(_cn.ApplicationScope)

_a.ApplicationScope()
---@class Nui : BaseObject
local Nui = class("Nui");

Nui.nuiReadyCallbacks = {}

function Nui.new()
    ---@type Nui
    local self = initMetatable(Nui);

    self.isNuiReady = false;
    self.pools = _c.List.new();

    Log.info("Nui is initializing");

    self:receive("nuiReady", function(data, cb)
        self.isNuiReady = true;
        Log.info(_chc.G .. "Nui is ready");
        self:send("ping", { test = "test" })
        self:send("locales", _LGetAll());
        cb({});
        for k, v in pairs(Nui.nuiReadyCallbacks) do
            local callback = v;
            callback.object[callback.attr](callback.object);
        end
    end);

    self:receive("enableNui", function(data, cb)
        Log.debug("Enable nui");
        self:setFocus(true, true);
        cb({});
    end);

    self:receive("disableNui", function(data, cb)
        Log.debug("Disable nui");
        self:setFocus(false, false);
        cb({});
    end);

    return self;
end

---@param name string
---@param data any
function Nui:send(name, data)
    Interface.thread(function()
        while not self.isNuiReady do
            Wait(0);
        end
        Log.debug("Send nui : " .. name);
        SendNUIMessage({ name = name, data = data });
    end);
end

---@param name string
---@param callback fun(data: any, cb: fun(data: any))
function Nui:receive(name, callback)
    Log.debug("Register nui : " .. name);
    local test = RegisterNUICallback(name, function(data, cb)
        callback(data, cb);
    end);

    Log.debug("Register nui : ", test);
end

function Nui:navigate(route)
    self:send("route", route);
end

function Nui:setFocus(hasFocus, hasCursor)
    SetNuiFocus(hasFocus, hasCursor);
end

function Nui:copyToClipboard(text)
    self:send("copyToClipboard", text);
end

_c.Nui = Nui;
classloaded(_cn.Nui)
