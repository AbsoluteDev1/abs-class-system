---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Absolute.
--- DateTime: 21/12/2023 01:18
---

_cn.Client = "Client";
loadClass(_cn.Client)

--- Imports ---
local Signal = import(_cn.Signal);

_a.ApplicationScope()
---@class Client : BaseObject
local Client = class("Client");

_a.Inject(_c.ModuleManager)
---@type ModuleManager
Client.moduleManager = nil;

function Client.new()
    DoScreenFadeOut(500);
    local self = initMetatable(Client);
    self.serverReady = false;
    self.onClientConnected = Signal.new();
    self.clientReady = _c.Signal.new();

    self.cache = _c.KvpCache.new();

    local time = Interface.getGameTimer();

    self:waitForModules();

    Citizen.CreateThread(function()
        Log.info("Server starting...");
        self:loadModules();
        Log.info("Modules loaded");
        Log.info("**************************");
        self:startAllModules();

        Log.info("**************************");
        Log.info("Server started");
        Log.info("Started in " .. Interface.getGameTimer() - time .. " ms");
    end)
    DisplayRadar(true);
    self:checkIfClientIsReady();
    return self;
end

---@return KvpCache
function Client:getCache()
    return self.cache;
end

---@return Signal
function Client:onClientReady()
    return self.clientReady;
end

_a.NetEvent()
function Client:isServerReady()
    self.serverReady = true;
    self.onClientConnected:fire();
    self:PrepareToPlay()
    ShutdownLoadingScreen()
    ShutdownLoadingScreenNui();
    DoScreenFadeIn(500);
    SetModelAsNoLongerNeeded(hash);
    SetEntityCoords(PlayerPedId(), -587.85162353516, -1192.9143066406, 17.542951583862);
    PlaceObjectOnGroundProperly(PlayerPedId());
    Log.info("^2Client ready to play !");
    FreezeEntityPosition(PlayerPedId(), false);

    self.ped = _c.Ped.new();
    self.ped.id = PlayerPedId();
    self.ped:loadModel();

    self:enableAllAction();

    local game = getSingleton(_c.MasterGame);
    game:goToStart();
end

function Client:PrepareToPlay()
    --- Disable police
    SetPoliceIgnorePlayer(PlayerPedId(), true);
    --- Disable wanted level
    ClearPlayerWantedLevel(PlayerPedId());
    --- Disable police
    SetMaxWantedLevel(0);
    --- Disable police
    SetWantedLevelMultiplier(0.0);
    --- Disable police
    SetDispatchCopsForPlayer(PlayerPedId(), false);
    --- Resurrect player
    ResurrectPed(PlayerPedId());
end

---@return Ped
function Client:getPed()
    return self.ped;
end

function Client:checkIfClientIsReady()
    Citizen.CreateThread(function()
        while not self.serverReady do
            if (self.serverReady) then
                break ;
            end
            Wait(1000);
            if not self.serverReady then
                TriggerServerEvent("Server:isServerReady");
            end
        end
    end)
end

function Client:waitForModules()
    repeat
        Interface.wait(0);
    until self.moduleManager:allModulesLoaded();
    Log.info("All modules loaded");
end

function Client:startAllModules()
    self.moduleManager:startModules();
end

function Client:loadModules()
    self.moduleManager:loadModules();
end

function Client:stopAllModules()
    self.moduleManager:stopModules();
end

function Client:disableAllAction()
    Ats.thread(function()
        DisableAllControlActions(0);
        DisableAllControlActions(1);
        DisableAllControlActions(2);
        DisableAllControlActions(3);
    end)
end

function Client:enableAllAction()
    Ats.thread(function()
        EnableAllControlActions(0);
        EnableAllControlActions(1);
        EnableAllControlActions(2);
        EnableAllControlActions(3);
    end)
end

_c.Client = Client;
classloaded(_cn.Client)
