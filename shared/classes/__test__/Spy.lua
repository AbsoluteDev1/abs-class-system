---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Absolute.
--- DateTime: 21/12/2023 01:18
---

_cn.Spy = "Spy";
loadClass(_cn.Spy)

--- Imports ---

---@class Spy : BaseObject
local Spy = class("Spy");

function Spy.new()
    ---@type Spy
    local self = initMetatable(Spy);
	self.params = {};
    return self;
end

function Spy:spyOn(obj, methodName)
	self.obj = obj;
	self.methodName = methodName;
	self.originalMethod = obj[methodName];
	self.obj[methodName] = function(...)
		self.called = true;
		self.params = {...};
		self.originalMethod(...);
	end
end

function Spy:verifyParams(...)
	assert(#self.params == #{...}, "Expected " .. #{...} .. " params but got " .. #self.params);
	for i, v in ipairs({...}) do
		assert(self.params[i] == v, "Expected param " .. i .. " to be " .. v .. " but got " .. self.params[i]);
	end
end

function Spy:verify()
	assert(self.called, "Method " .. self.methodName .. " was not called");
end

_c.Spy = Spy;
classloaded(_cn.Spy)