---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Absolute.
--- DateTime: 09/10/2024
---

_cn.MathUtils = "MathUtils";
loadClass(_cn.MathUtils)

--- Imports ---

---@class MathUtils : BaseObject
local MathUtils = class("MathUtils");

function MathUtils.new()
    ---@type MathUtils
    local self = initMetatable(MathUtils);

    return self;
end

function MathUtils.random(min, max)
    return math.random(min, max);
end

function MathUtils.randomFloat(min, max)
    return min + math.random() * (max - min);
end

function MathUtils.randomVector2(min, max)
    return vector2(self:random(min, max), self:random(min, max));
end

function MathUtils.normalize(x, y, z)
    local length = math.sqrt(x * x + y * y + z * z)
    if length == 0 then
        return 0, 0, 0
    end
    return x / length, y / length, z / length
end

function MathUtils.approximately(a, b, tolerance)
    return math.abs(a - b) <= tolerance;
end

function MathUtils.clamp(value, min, max)
    return math.min(math.max(value, min), max);
end

function MathUtils.lerp(a, b, t)
    return a + (b - a) * t;
end

function MathUtils.inverseLerp(a, b, value)
    return (value - a) / (b - a);
end

function MathUtils.map(value, a1, b1, a2, b2)
    return a2 + (value - a1) * (b2 - a2) / (b1 - a1);
end

function MathUtils.round(value)
    return math.floor(value + 0.5);
end

function MathUtils.roundToDecimal(value, decimals)
    local mult = 10 ^ (decimals or 0);
    return math.floor(value * mult + 0.5) / mult;
end

function MathUtils.sign(value)
    return value > 0 and 1 or value < 0 and -1 or 0;
end

_c.MathUtils = MathUtils;
classloaded(_cn.MathUtils)