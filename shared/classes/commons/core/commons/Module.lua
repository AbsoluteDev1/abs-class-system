---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Absolute.
--- DateTime: 20/12/2023 23:39
---

_cn.Module = "Module"
loadClass(_cn.Module)

---@class Module : Instance
---@field name string
---@field isLoaded boolean
---@field isStarted boolean
local Module = extends("Module", "Instance");

function Module.new(name)
    local self = initMetatable(Module);
    self.name = name;
    self.isLoaded = false;
    self.isStarted = false;

    self.starting = _c.Signal.new();
    self.stopping = _c.Signal.new();

    return self;
end

function Module:load()
    if self.isLoaded then
        return ;
    end
    self:onLoad();
    self.isLoaded = true;
end

function Module:start()
    if self.isStarted then
        return ;
    end
    self.isStarted = true;
    self:onStart();
    self.starting:fire();
    Log.info(("Module %s%s%s started"):format(_chc.B, self.__class__, _chc.W));
end

function Module:stop()
    if not self.isStarted then
        return ;
    end
    self.isStarted = false;
    self:onStop();
    self.stopping:fire();
    Log.info(("Module %s stopped"):format(self.name));
end

function Module:unload()
    if not self.isLoaded then
        return ;
    end
    self:stop();
    self.isLoaded = false;
    Log.info(("Module %s unloaded"):format(self.name));
end

function Module:onStart()

end

function Module:onStop()

end

function Module:onLoad()

end

function Module:restart()
    self:stop();
    self:load();
    self:start();
end

function Module:registerAddon(addon)

end

_c.Module = Module
classloaded(_cn.Module)